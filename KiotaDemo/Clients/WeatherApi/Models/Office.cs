// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace KiotaDemo.Clients.WeatherApi.Models
{
    #pragma warning disable CS1591
    public class Office : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public KiotaDemo.Clients.WeatherApi.Models.Office_address? Address { get; set; }
#nullable restore
#else
        public KiotaDemo.Clients.WeatherApi.Models.Office_address Address { get; set; }
#endif
        /// <summary>The approvedObservationStations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ApprovedObservationStations { get; set; }
#nullable restore
#else
        public List<string> ApprovedObservationStations { get; set; }
#endif
        /// <summary>The Context property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? Context { get; set; }
#nullable restore
#else
        public UntypedNode Context { get; set; }
#endif
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The faxNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FaxNumber { get; set; }
#nullable restore
#else
        public string FaxNumber { get; set; }
#endif
        /// <summary>The Id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The nwsRegion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NwsRegion { get; set; }
#nullable restore
#else
        public string NwsRegion { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OfficeId { get; set; }
#nullable restore
#else
        public string OfficeId { get; set; }
#endif
        /// <summary>The parentOrganization property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentOrganization { get; set; }
#nullable restore
#else
        public string ParentOrganization { get; set; }
#endif
        /// <summary>The responsibleCounties property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ResponsibleCounties { get; set; }
#nullable restore
#else
        public List<string> ResponsibleCounties { get; set; }
#endif
        /// <summary>The responsibleFireZones property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ResponsibleFireZones { get; set; }
#nullable restore
#else
        public List<string> ResponsibleFireZones { get; set; }
#endif
        /// <summary>The responsibleForecastZones property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ResponsibleForecastZones { get; set; }
#nullable restore
#else
        public List<string> ResponsibleForecastZones { get; set; }
#endif
        /// <summary>The sameAs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SameAs { get; set; }
#nullable restore
#else
        public string SameAs { get; set; }
#endif
        /// <summary>The telephone property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Telephone { get; set; }
#nullable restore
#else
        public string Telephone { get; set; }
#endif
        /// <summary>The Type property</summary>
        public KiotaDemo.Clients.WeatherApi.Models.Office_Type? Type { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="KiotaDemo.Clients.WeatherApi.Models.Office"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static KiotaDemo.Clients.WeatherApi.Models.Office CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new KiotaDemo.Clients.WeatherApi.Models.Office();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetObjectValue<KiotaDemo.Clients.WeatherApi.Models.Office_address>(KiotaDemo.Clients.WeatherApi.Models.Office_address.CreateFromDiscriminatorValue); } },
                { "approvedObservationStations", n => { ApprovedObservationStations = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "@context", n => { Context = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "faxNumber", n => { FaxNumber = n.GetStringValue(); } },
                { "@id", n => { Id = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "nwsRegion", n => { NwsRegion = n.GetStringValue(); } },
                { "id", n => { OfficeId = n.GetStringValue(); } },
                { "parentOrganization", n => { ParentOrganization = n.GetStringValue(); } },
                { "responsibleCounties", n => { ResponsibleCounties = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "responsibleFireZones", n => { ResponsibleFireZones = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "responsibleForecastZones", n => { ResponsibleForecastZones = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "sameAs", n => { SameAs = n.GetStringValue(); } },
                { "telephone", n => { Telephone = n.GetStringValue(); } },
                { "@type", n => { Type = n.GetEnumValue<KiotaDemo.Clients.WeatherApi.Models.Office_Type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<KiotaDemo.Clients.WeatherApi.Models.Office_address>("address", Address);
            writer.WriteCollectionOfPrimitiveValues<string>("approvedObservationStations", ApprovedObservationStations);
            writer.WriteObjectValue<UntypedNode>("@context", Context);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("faxNumber", FaxNumber);
            writer.WriteStringValue("@id", Id);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("nwsRegion", NwsRegion);
            writer.WriteStringValue("id", OfficeId);
            writer.WriteStringValue("parentOrganization", ParentOrganization);
            writer.WriteCollectionOfPrimitiveValues<string>("responsibleCounties", ResponsibleCounties);
            writer.WriteCollectionOfPrimitiveValues<string>("responsibleFireZones", ResponsibleFireZones);
            writer.WriteCollectionOfPrimitiveValues<string>("responsibleForecastZones", ResponsibleForecastZones);
            writer.WriteStringValue("sameAs", SameAs);
            writer.WriteStringValue("telephone", Telephone);
            writer.WriteEnumValue<KiotaDemo.Clients.WeatherApi.Models.Office_Type>("@type", Type);
        }
    }
}
