// <auto-generated/>
using KiotaDemo.Clients.WeatherApi.Gridpoints.Item.WithXWithY;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace KiotaDemo.Clients.WeatherApi.Gridpoints.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \gridpoints\{wfo}
    /// </summary>
    public class WithWfoItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="KiotaDemo.Clients.WeatherApi.Gridpoints.Item.WithWfoItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithWfoItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/gridpoints/{wfo}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="KiotaDemo.Clients.WeatherApi.Gridpoints.Item.WithWfoItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithWfoItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/gridpoints/{wfo}", rawUrl)
        {
        }
        /// <summary>
        /// Builds and executes requests for operations under \gridpoints\{wfo}\{x},{y}
        /// </summary>
        /// <returns>A <see cref="KiotaDemo.Clients.WeatherApi.Gridpoints.Item.WithXWithY.WithXWithYRequestBuilder"/></returns>
        /// <param name="x">Forecast grid X coordinate</param>
        /// <param name="y">Forecast grid Y coordinate</param>
        public KiotaDemo.Clients.WeatherApi.Gridpoints.Item.WithXWithY.WithXWithYRequestBuilder WithXWithY(int? x, int? y)
        {
            _ = x ?? throw new ArgumentNullException(nameof(x));
            _ = y ?? throw new ArgumentNullException(nameof(y));
            return new KiotaDemo.Clients.WeatherApi.Gridpoints.Item.WithXWithY.WithXWithYRequestBuilder(PathParameters, RequestAdapter, x, y);
        }
    }
}
